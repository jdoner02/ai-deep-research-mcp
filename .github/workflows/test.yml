name: Test Suite

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-asyncio
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

    - name: Install package dependencies
      run: |
        pip install requests beautifulsoup4 lxml feedparser
        pip install sentence-transformers transformers torch
        pip install chromadb faiss-cpu numpy
        pip install PyMuPDF python-docx
        pip install ddgs
        
    - name: Run tests with pytest
      run: |
        pytest tests/ -v --tb=short --cov=src --cov-report=xml --cov-report=term-missing
      continue-on-error: false

    - name: Upload coverage reports to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy

    - name: Run flake8
      run: flake8 src/ tests/ --max-line-length=100 --ignore=E203,W503

    - name: Check code formatting with black
      run: black --check src/ tests/

    - name: Check import sorting with isort
      run: isort --check-only src/ tests/

    - name: Run type checking with mypy
      run: mypy src/ --ignore-missing-imports
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run bandit security linter
      run: bandit -r src/ -f json -o bandit-report.json
      continue-on-error: true

    - name: Run safety check
      run: safety check
      continue-on-error: true

  integration:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 lxml feedparser
        pip install sentence-transformers transformers torch
        pip install chromadb faiss-cpu numpy
        pip install PyMuPDF python-docx
        pip install ddgs pytest pytest-asyncio

    - name: Run integration tests
      run: |
        python -m pytest tests/test_scholarly_integration.py -v -k "not test_github" --tb=short
      continue-on-error: true

    - name: Test web interface
      run: |
        cd web_interface
        npm install
        npm test
      continue-on-error: true
